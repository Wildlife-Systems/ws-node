#!/bin/bash

# WildlifeSystems
#
# This script is part of the WildlifeSystems project. For further information
# please refer to https://docs.wildlife.systems, or for more information on
# the project itself, please refer to https://wildlife.systems.

# Return codes
#
# Further information on WildlifeSystems standard reurn codes can be found
# at https://docs.wildlife.systems/return-codes.html
# 0 - Success
# 1 - Already running
# 11 - Incorrect filename pattern


#Check if this script already running
if [[ "$(pgrep -c ws-run-audio)" -gt 1 ]]; then
  echo "ws-run-audio already running. Exiting."
  exit 1
fi

echo "Starting ws-run-audio..."

#Config
CONFIG=$(cat /etc/ws/audio.conf)

#Check config exists
if [[ -z "$CONFIG" ]]; then
  echo "No config file found."
  exit 2
fi

COUNTDOWN=5
FNTYPE=$(echo "$CONFIG" | jq -r '.init .filenaming')

function onOff {
  pi-pwr off $(echo "$CONFIG" | jq -r '.init .off[]' | tr '\n' ' ')
  pi-pwr on $(echo "$CONFIG" | jq -r '.init .on[]' | tr '\n' ' ')
}

while true;
do

	case $FNTYPE in
			timestamp)
					FN=$(date +%s)
					;;
			*)
					echo "Incorrect filename pattern"
					exit 11;
					;;
	esac

	N=$(echo "$CONFIG" | jq -r ".run | length")
	I=0
	while [ $I  -lt $N ];
	do
		pi-pwr off $(echo "$CONFIG" | jq -r ".run[$I] .off[]" | tr '\n' ' ')
  		pi-pwr on $(echo "$CONFIG" | jq -r ".run[$I] .on[]" | tr '\n' ' ')
		ACTION=`echo $CONFIG| jq -r ".run[$I] .action"`
		echo $ACTION
		sudo ws-heartbeat $ACTION &
        	case  $ACTION in
			record)
				DURATION=`echo $CONFIG| jq -r ".run[$I] .duration"`
				CHANNELS=`echo $CONFIG| jq -r ".run[$I] .channels"`
				BITRATE=`echo $CONFIG| jq -r ".run[$I] .bitrate"`
				FORMAT=`echo $CONFIG| jq -r ".run[$I] .format"`
				ws-indicate record "arecord -c $CHANNELS -r $BITRATE -f $FORMAT -d $DURATION $FN.wav"
				;;
			sleep)
				sleep `echo $CONFIG| jq -r ".run[$I] .duration"`
				;;
			upload)
				;;
			upload-delete)
				METHOD=`echo $CONFIG| jq -r ".run[$I] .method"`
				UPPATH=`echo $CONFIG| jq -r ".run[$I] .path"`
				EXTENSION=`echo $CONFIG| jq -r ".run[$I] .extension"`
				ASYNC=`echo $CONFIG| jq -r ".run[$I] .async"`
				case $METHOD in
					s3cmd)
						S3UP=`eval echo "s3cmd put $FN.$EXTENSION s3://$UPPATH"`
						S3UP="$S3UP && rm $FN.$EXTENSION"
						if [[ "$ASYNC" == "true" ]]; then
						  S3UP="( $S3UP )&";
						fi
						eval $S3UP
						;;
					mv)
						MVUP=`eval echo "mv $FN.$EXTENSION $UPPATH"`
						if [[ "$ASYNC" == "true" ]]; then
						  MVUP="( $MVUP )&";
						fi
						eval $MVUP
						;;
				esac
				;;
			clearup)
				;;
		esac

		I=$(($I + 1))
		ws-indicate heartbeat
	onOff
	done
done
