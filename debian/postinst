#!/bin/bash

set -e

chmod +x /usr/bin/ws-indicate
chmod +x /usr/bin/ws-heartbeat
chmod +x /usr/bin/ws-run-audio
chmod +x /usr/bin/ws-run-sensors
chmod +x /usr/bin/ws-network
chmod +x /usr/bin/ws-setup

chown root:root /etc/sudoers.d/ws

case "$1" in
    configure)
        echo "Configuring WildlifeSystems services..."
        
        # Reload systemd to pick up new service files
        systemctl daemon-reload
        
        # Check if we have saved service states
        if [[ -f /var/lib/ws-node/enabled-services.txt ]]; then
            echo "Restoring previously enabled services..."
            while IFS= read -r unit; do
                if [[ -n "$unit" ]]; then
                    echo "Enabling $unit"
                    systemctl enable "$unit" || true
                fi
            done < /var/lib/ws-node/enabled-services.txt
        fi
        
        if [[ -f /var/lib/ws-node/active-services.txt ]]; then
            echo "Restoring previously active services..."
            while IFS= read -r unit; do
                if [[ -n "$unit" ]]; then
                    echo "Starting $unit"
                    systemctl start "$unit" || true
                fi
            done < /var/lib/ws-node/active-services.txt
        fi
        
        # Clean up state files after restore
        rm -f /var/lib/ws-node/enabled-services.txt || true
        rm -f /var/lib/ws-node/active-services.txt || true
        
        echo "WildlifeSystems services configured successfully"
        ;;
        
    abort-upgrade|abort-remove|abort-deconfigure)
        # Handle rollback scenarios
        echo "Handling package configuration abort for case: $1"
        ;;
        
    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
        ;;
esac

exit 0
